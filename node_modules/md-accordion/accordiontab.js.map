{"version":3,"sources":["accordion/accordiontab.ts"],"names":[],"mappings":"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","file":"accordion/accordiontab.js","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { MdAccordion } from './accordionpanel';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-accordion-tab',\r\n  template: `\r\n    <div class=\"md-accordion-header\" (click)=\"toggle($event)\">\r\n      <span class=\"md-accordion-title\">{{header}}</span>\r\n      <span class=\"md-accordion-header-icon\"></span>\r\n    </div>\r\n    <div class=\"md-accordion-tab-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .md-accordion-tab { position: relative; display: block; outline: 0; border: 0; border-width: 1px 0; border-style: solid; border-color: transparent; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\r\n    .md-accordion-tab.md-accordion-tab-active { border-color: rgba(0, 0, 0, 0.12); }\r\n    .md-accordion-tab .md-accordion-header { position: relative; border-radius: 0; color: rgba(0, 0, 0, 0.54); font-weight: 500; cursor: pointer; display: block; align-items: inherit; line-height: 40px; margin: 0; max-height: 40px; overflow: hidden; padding: 0 35px 0 16px; text-align: left; text-decoration: none; white-space: nowrap; width: 100%; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-user-drag: none; }\r\n    .md-accordion-tab.md-accordion-tab-disabled .md-accordion-header { color: rgba(0,0,0,0.26); pointer-events: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-user-drag: none; opacity: 0.5; cursor: default; }\r\n    .md-accordion-tab .md-accordion-title { color: rgba(0,0,0,0.85); }\r\n    .md-accordion-tab.md-accordion-tab-active .md-accordion-title { color: #106cc8; }\r\n    .md-accordion-tab .md-accordion-header-icon { position: absolute; top: 12px; right: 17px; width: 8px; height: 8px; overflow: hidden; display: inline-block; border-width: 0 2px 2px 0; border-style: solid; border-color: rgba(0, 0, 0, 0.54); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); -webkit-transform: rotate(45deg); transform: rotate(45deg); -moz-transition: 0.3s ease-in-out; -o-transition: 0.3s ease-in-out; -webkit-transition: 0.3s ease-in-out; transition: 0.3s ease-in-out; }\r\n    .md-accordion-tab.md-accordion-tab-active .md-accordion-header-icon { -moz-transform: rotate(225deg); -ms-transform: rotate(225deg); -o-transform: rotate(225deg); -webkit-transform: rotate(225deg); transform: rotate(225deg); top: 16px; }\r\n    .md-accordion-tab .md-accordion-tab-content { position: relative; display: none; padding: 16px; }\r\n    .md-accordion-tab.md-accordion-tab-active .md-accordion-tab-content { display: block; }\r\n  `],\r\n  host: {\r\n    'role': 'accordion-tab',\r\n    '[class]': 'mdClass',\r\n    '[class.md-accordion-tab]': 'true',\r\n    '[class.md-accordion-tab-active]': 'active',\r\n    '[class.md-accordion-tab-disabled]': 'disabled'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdAccordionTab {\r\n\r\n  @Input('class') mdClass: string = '';\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() active: boolean;\r\n\r\n  @Input() disabled: boolean;\r\n\r\n  constructor(private accordion: MdAccordion) {\r\n    this.accordion.addTab(this);\r\n  }\r\n\r\n  /**\r\n   * Toggle the accordion\r\n   * @param event\r\n   * @return if it is disabled\r\n   */\r\n  toggle(event: Event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    let index = this.findTabIndex();\r\n\r\n    if (this.active) {\r\n      this.active = !this.active;\r\n      this.accordion.close.emit({ originalEvent: event, index: index });\r\n    } else if (!this.accordion.multiple) {\r\n      for (let i = 0; i < this.accordion.tabs.length; i++) {\r\n        this.accordion.tabs[i].active = false;\r\n      }\r\n      this.active = true;\r\n      this.accordion.open.emit({ originalEvent: event, index: index });\r\n    } else {\r\n      this.active = true;\r\n      this.accordion.open.emit({ originalEvent: event, index: index });\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Find index of specific tab of accordion\r\n   * @return index number of this tab\r\n   */\r\n  findTabIndex() {\r\n    let index = -1;\r\n    for (let i = 0; i < this.accordion.tabs.length; i++) {\r\n      if (this.accordion.tabs[i] === this) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}